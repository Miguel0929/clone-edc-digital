.container-fluid.container-fixed-lg.bg-white
  .panel.panel-transparent
    .panel-heading
      .pull-right
        .col-xs-12
          / %input#search-table.form-control.pull-right{:placeholder => "Search", :type => "text"}/
          %input#admin_students.form-control.pull-right{:placeholder => "Search", :type => "text"}/
      .clearfix
    .panel-body
      - if current_user.admin?
        = bootstrap_form_tag(url: students_users_path, method: :get) do |f|
          .row
            .col-md-4
              = f.select :state, options_for_select([['Activo', 'active'], ['Inactivo', 'inactive']], params[:state]), {include_blank: true, label: 'Estado' }
            .col-md-4
              = f.select :group, options_from_collection_for_select(Group.all, :id, :name, params[:group]), {include_blank: true, label: 'Grupo' }

          = f.submit 'Filtrar'
          .btn-group
            %button.btn.btn-success.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", type: "button" }
              Exportar Lista
              %span.caret
            %ul.dropdown-menu
              %li
                = link_to 'Formato rápido', students_users_path(format: :xlsx, fast: true)
              %li
                = link_to 'Formato completo', students_users_path(format: :xlsx, fast: false)

      - if params[:state].present? || params[:group].present?
        .well
          - complete = [] #vector-contador global a
          - check = [] #vector-contador global b
          - ave = [] #vector-contador global c
          - @users.each do |student|
            - control_a = [] #vector-contador a por alumno
            - control_b = [] #vector-contador b por alumno
            - ave << student.answered_questions_percentage
            - @group.programs.each do |program|
              - (student.percentage_questions_answered_for(program) >= 95) ? control_a << 1 : control_a << 0
              - program.program_checked?(program, student) ? control_b << 1 : control_b << 0
            - complete << (control_a.detect{|i| i == 0 } ? 0 : 1)
            - check << (control_b.detect{|i| i == 0 } ? 0 : 1)
          %ul
            %li.inline 
              %i.fa.fa-edit 
            %li.inline 
              Alumnos totales: 
            = @users.count
          %ul.p-l-10.m-b-0
            %li.inline 
              %i.fa.fa-edit 
            %li.inline 
              Alumnos completos:  
              %strong #{complete.count(1)} / #{complete.size}
          %ul.p-l-10.m-b-0
            %li.inline 
              %i.fa.fa-check
            %li.inline 
              Alumnos revisados:
              %strong #{check.count(1)} / #{check.size}
          %ul.p-l-10.m-b-0
            %li.inline 
              %i.fa.fa-rocket
            %li.inline 
              Avance global de grupo: 
              %strong #{(ave.inject{ |sum, el| sum + el }.to_f / ave.size).ceil}%

      %table.table.table-hover
        %thead
          %tr
            %th
              Id
            %th{:width => "25%"}
              Datos de contacto
            %th{:width => "25%"}
              Información de usuario
            - if current_user.admin?
              %th{:width => "25%"}
                Porcentaje de avances
            %th
              Acciones
        %tbody
          - @users.each do |user|
            %tr
              %td
                = user.id
              %td  
                .m-b-0
                  = link_to user.name, user_path(user)
                %ul.p-l-0.m-b-0
                  %li.inline 
                    %i.fa.fa-envelope
                  %li.inline 
                    = user.email
                %ul.p-l-0.m-b-0
                  %li.inline 
                    %i.fa.fa-phone
                  %li.inline 
                    = user.phone_number
              %td
                %ul.p-l-0.m-b-0
                  %li.inline 
                    %span.bold Estado:
                  %li.inline{:class => "#{(user.status == 'Inactivo') ? 'text-danger' : 'text-primary'}"} 
                    = user.status
                %ul.p-l-0.m-b-0
                  %li.inline 
                    %span.bold Rol:
                  %li.inline 
                    = user.huminize_role
                %ul.p-l-0.m-b-0
                  %li.inline 
                    %span.bold Grupo:
                  %li.inline 
                    = user.group.name.capitalize unless user.group.nil?
              - if current_user.admin?
                %td
                  %ul.p-l-0.m-b-0
                    %li.inline 
                      %span.bold Contestado:
                    %li.inline 
                      #{user.answered_questions_percentage}%
                  %ul.p-l-0.m-b-0
                    %li.inline 
                      %span.bold Visto:
                    %li.inline 
                      #{user.content_visited_percentage}%
              %td
                %ul.unstyled.list-unstyled.p-l-0.m-b-0
                  %li 
                    = link_to user_path(user) do
                      %i.fa.fa-eye
                      Ver información
                  - if user.student?
                    - if current_user.admin?
                      %li
                        = link_to edit_user_path(user) do
                          %i.fa.fa-edit
                          Editar
                      %li
                        = link_to user_path(user), method: :delete, data: { confirm: '¿Estás seguro?' } do
                          %i.fa.fa-times
                          Eliminar
                      %li
                        = link_to new_user_invitation_path, :target => "_blank" do
                          %i.fa.fa-send-o
                          Enviar invitación
      .pull-right
        = paginate @users
        %br
        = page_entries_info @users
