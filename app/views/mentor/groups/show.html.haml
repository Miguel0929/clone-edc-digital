- content_for :title  do
  Grupos - EDCdigital

.container-fluid.container-fixed-lg.top-container-padding.minus-30
  %section.demo-bg-section.p-b-15.p-t-30.panel-title-perfil
    .container
      .md-p-l-20.md-p-r-20.xs-no-padding
        .row.col-md-12
          .col-sm-4.col-md-4.no-padding.xs-p-l-15.xs-p-r-15
            %h2.text-white 
              Detalle de grupo
          .col-sm-8.col-md-8.no-padding.resp-p-l-50.xs-p-l-15.xs-p-r-15
            %h3.text-white
              %span.p-r-10{style: "font-size:16px !important;"}
                Nombre:
              %span
                #{@group.name}
            = link_to  mentor_groups_path, class: 'btn btn-sm btn-complete btn-cons m-b-10' do
              %i.fa.fa-reply
              %span.bold Regresar a mis grupos

.container-fluid.container-fixed-lg
  .panel.panel-default
    .panel-body
      .row
        .col-md-5
          %h5
            Programas habilitados para este grupo
          %ol
            - @group.programs.each do |program|
              %li
                = program.name
        .col-md-4
          %h5
            Profesores vinculados a este grupo
          %ul.unstyled.no-style
            - @group.users.each do |user|
              %li 
                %i.fa.fa-angle-right
                = user.name
        .col-md-3
          %h5
            Estadísticas de grupo
          %ul.unstyled.no-style
            - current_stats = @group.get_group_stat(@group)
            - if !current_stats.nil?
              %li
                %ul.p-l-5.m-b-0
                  %li.inline.p-l-0
                    %i.fa.fa-user 
                  %li.inline 
                    Alumnos del grupo: 
                    %strong #{current_stats.group_students}
                %ul.p-l-5.m-b-0
                  %li.inline.p-l-0
                    %i.fa.fa-check-square-o
                  %li.inline 
                    Alumnos evaluados: 
                    %strong #{current_stats.evaluated_students}
                %ul.p-l-5.m-b-0
                  %li.inline.p-l-0
                    %i.fa.fa-eye 
                  %li.inline 
                    Promedio visto:  
                    %strong
                      #{current_stats.average_seen.ceil}%
                %ul.p-l-5.m-b-0
                  %li.inline.p-l-0
                    %i.fa.fa-rocket
                  %li.inline 
                    Promedio contestado: 
                    %strong
                      #{current_stats.average_progress.ceil}%
              %li.m-t-15
                = link_to generate_group_stats_path(@group) do
                  %ul.p-l-5.m-b-0
                    %li.inline.p-l-0
                      %i.fa.fa-rotate-right
                    %li.inline 
                      Actualizar estadísticos
                  %ul.p-l-20.m-b-0{:style => "font-size: 0.8em;"}
                    %li.inline 
                      * Última vez: 
                      = l current_stats.updated_at, format: :short_no_year
            - else
              %li.m-t-15
                = link_to generate_group_stats_path(@group) do
                  %ul.p-l-5.m-b-0
                    %li.inline.p-l-0
                      %i.fa.fa-line-chart
                    %li.inline 
                      Generar estadísticos

      %h4
        Lista de alumnos
      .row
        .col-md-10
          = link_to mentor_group_path(@group, format: :xlsx), class: "btn btn-success pull-left" do
            Exportar a Excel 
            %i.fa.fa-file-excel-o
        .col-md-2
          .form-group
            %div.input-group
              %input#group_student.form-control.pull-right{:placeholder => "Search  |", :type => "text", class: "text-black"}/
              %span.input-group-addon.font-search
                %i.fa.fa-search.text-white
      
      .table-responsive   
        %table.table.table-striped
          %thead
            %th{width: "27%"}
              Datos del alumno
            %th{width: "23%"}
              Avances del alumno
            %th
              Programas inscritos
            %th
              Estado de evaluación
          %tbody
            - @students.each_with_index do |student, index|
              %tr
                %td.p-b-20
                  .m-b-10
                    = link_to student.name, mentor_student_path(student)
                  %ul.p-l-0.m-b-0
                    %li.inline 
                      %i.fa.fa-envelope
                    %li.inline 
                      = student.email
                %td
                  .m-b-10
                    %i.fa.fa-edit
                    %span Preguntas contestadas:
                    %strong #{student.content_visited_percentage}%
                  .m-b-10
                    %i.fa.fa-eye
                    %span Contenido visto:
                    %strong #{student.answered_questions_percentage}%
                %td
                  %ul.list-inline.no-style.unstyled
                    - @group.programs.each_with_index do |program, index|
                      %li
                        - review = program.program_checked?(program, student)
                        - progress_percentage =  student.percentage_questions_answered_for(program)
                        = link_to mentor_evaluations_path(user_id: student, program_id: program) do
                          - if progress_percentage > 95
                            .label.label-success.program-labels{:class => "#{review ? '' : 'p-sides-14-2'}", "data-toggle": "tooltip", "data-original-title": "#{program.name}"}
                              = !program.short_name.nil? ? program.short_name : "P-#{index}"
                              %i.fa{:class => "#{review ? 'fa-check' : ''}"}
                          - else
                            .label.program-labels{:class => "#{(progress_percentage > 0) ? 'label-warning' : ''} #{review ? '' : 'p-sides-14-2'}", "data-toggle": "tooltip", "data-original-title": "#{program.name}"}
                              = !program.short_name.nil? ? program.short_name : "P-#{index}"
                              %i.fa{:class => "#{review ? 'fa-check' : ''}"}
                %td.text-center
                  %input{type: "hidden", id: "student_ready_#{student.id}", value: student.ready_to_check?.to_s}
                  %input{type: "hidden", id: "student_key_#{student.id}", value: student.id}
                  - student_eval = (student.evaluation_status == 'evaluado') ? 1 : 0
                  %label.switch{id: "switch_#{student.id}"}
                    - if student_eval == 1
                      %input{{type: "checkbox"}, {id: "checking_eval_#{student.id}"}, {value: student_eval}, {name: "student_eval[checked]"}, {checked: :true}, student.ready_to_check? ? {} : { disabled: true }}
                    - else
                      %input{{type: "checkbox"}, {id: "checking_eval_#{student.id}"}, {value: student_eval}, {name: "student_eval[checked]"}, student.ready_to_check? ? {} : { disabled: true }}
                    .slider.round
                  :javascript
                    $(document).ready(function(){
                      if ($("#student_ready_" + #{student.id}).val() == "false") {
                        $("#checking_eval_" + #{student.id}).each(function() {
                          $('#switch_' + #{student.id}).append('<div id="disabledClick_#{student.id}" style="position:absolute;top:0px;left:0px;width:62px;height:36px;background:transparent;cursor:pointer;"></div>');
                        });
                        $("#disabledClick_" + #{student.id}).click(function() {
                          $("#alert_text_error").text("El alumno debe tener todos los programas evaluados");
                          $("#alert-ra-error").css('display','block');
                          setTimeout(function(){$("#alert-ra-error").css('display','none');},4000);
                        });

                      } else {
                      
                        $("#checking_eval_" + #{student.id}).change(function(){
                          var user_id = $("#student_key_" + #{student.id}).val();
                          $.ajax({
                            type: "post",
                            url: "/change_evaluation", 
                            data: {user_id},
                            success: function(data){
                              if (data.eval){
                                $("#alert_text").text("El alumno ha sido marcado como evaluado");
                              }else{
                                $("#alert_text").text("El alumno dejó de estar marcado como evaluado");
                              }
                              $("#alert-ra").css('display','block');
                              setTimeout(function(){$("#alert-ra").css('display','none');},4000);
                            },
                            error: function (data) {
                              console.log(data);
                            } 
                          });
                        });

                      }
                    });
#alert-ra.pgn-wrapper{"data-position" => "top-right", "style"=>"display:none;"}
  .pgn.push-on-sidebar-open.pgn-simple
    #al.alert.alert-info
      %button.close{"data-dismiss" => "alert", :type => "button"}>
        %span{"aria-hidden" => "true"} ×
        %span.sr-only Close
      #alert_text
#alert-ra-error.pgn-wrapper{"data-position" => "top-right", "style"=>"display:none;"}
  .pgn.push-on-sidebar-open.pgn-simple
    #al.alert.alert-error
      %button.close{"data-dismiss" => "alert", :type => "button"}>
        %span{"aria-hidden" => "true"} ×
        %span.sr-only Close
      #alert_text_error
                  
