- content_for :title  do
  Estudiantes - EDCdigital

.container-fluid.container-fixed-lg.top-container-padding.minus-30
  %section.demo-bg-section.p-b-15.p-t-30.panel-title-recursos
    .container
      .md-p-l-20.md-p-r-20.xs-no-padding
        .row.col-md-12
          .col-sm-4.col-md-4.no-padding.xs-p-l-15.xs-p-r-15
            %h2.text-white
              Detalle de estudiante
          .col-sm-8.col-md-8.no-padding.resp-p-l-50.xs-p-l-15.xs-p-r-15
            %h3.text-white
              %span.p-r-10{style: "font-size:16px !important;"}
                Nombre:
              %span
                #{@user.name}
            = link_to  mentor_group_path(@user.group.id), class: 'btn btn-sm btn-complete btn-cons m-b-10' do
              %i.fa.fa-reply
              %span.bold Regresar a grupo
            .btn-like-switch.pull-left.m-t-0.m-r-10.m-b-5
              %label.switch
                %input{type: "hidden", id: "student_ready", value: @user.ready_to_check?.to_s}
                %input{type: "hidden", id: "user_id", value: @user.id}
                %input#student_evaluation_mentor{{:type => "checkbox"}, @user.evaluation_status == 'evaluado' ? {checked: 1, value: 1} : {value: 0}, @user.ready_to_check? ? {} : { disabled: true }}
                .slider.round
              .label-for-switch.text-white.p-l-5
                Estado de evaluación

.container-fluid.container-fixed-lg
  /.row
  /  .col-sm-12
  .panel.panel-default
    .panel-body
      .row
        .col-md-3
          .share.share-other.m-t-5.m-b-20.text-center
            .card-content
              - if @user.profile_picture.url.nil?
                = image_tag('person-1-square.jpg', width: "170") #Se puede agregar -> class: 'img-responsive'
              - else
                = image_tag(@user.profile_picture.url, width: "170") #Se puede agregar -> class: 'img-responsive'
          .m-b-10.panel.panel-default
            .widget-9.panel.no-border.bg-grey.no-margin.widget-loader-bar{:style => "height: 125px !important;"}
              .container-xs-height
                .row-xs-height
                  .col-xs-height.col-top
                    .panel-heading.top-left.top-right
                      .panel-title
                        %span.font-montserrat.fs-11.all-caps
                          Avances de estudiante
                          %i.fa.fa-chevron-right
                      .panel-body.padding-5
                        .row
                          .col-sm-12
                            .small.p-b-5
                              %span.small-text Porcentaje contestado: 
                              %span.text-success.font-montserrat.small-text #{@user.user_progress.ceil}%
                            .progress.progress-small.m-b-5
                              .progress-bar.progress-bar-primary{:style => "width: #{@user.answered_questions_percentage}%"}
                          .col-sm-12
                            .small.p-b-5
                              %span.small-text Porcentaje visto: 
                              %span.text-success.font-montserrat.small-text #{@user.user_seen.ceil}%
                            .progress.progress-small.m-b-5
                              .progress-bar.progress-bar-primary{:style => "width: #{@user.content_visited_percentage}%"}
          .m-b-10.panel.panel-default
            .widget-9.panel.no-border.bg-grey.no-margin.widget-loader-bar{:style => "height: 125px !important;"}
              .container-xs-height.full-height
                .row-xs-height
                  .col-xs-height.col-top
                    .panel-heading.top-left.top-right
                      .panel-title
                        %span.font-montserrat.fs-11.all-caps
                          Conexiones de usuario
                          %i.fa.fa-chevron-right
                .row-xs-height
                  .col-xs-height.col-top
                    .p-l-20.p-t-15.m-t-10
                      .small
                        %span.hint-text
                          %i.fa.fa-clock-o.p-r-5
                          Última vez:
                        %span.small-text.text-primary #{ @user.last_time }
                      .small
                        %span.hint-text
                          %i.fa.fa-clock-o.p-r-5
                          Promedio de uso:
                        %span.small-text.text-primary #{ @user.time_average.round(2) } minutos
                      .small
                        %span.hint-text
                          %i.fa.fa-clock-o.p-r-5
                          Uso total:
                        %span.small-text.text-primary #{ @user.total_time.round(2) } minutos
        .col-md-9
          %table.table.resumen-table.table-striped.table-top-border.perfil-table
            %tbody
              %tr.odd.gradeX
                %td{:width => "25%"} Nombre
                %td
                  = @user.name
              /%tr.odd.gradeX
              /%td{:width => "25%"} Estatus de evaluación
              /%td
              /  = editable @user, :evaluation_status, source: [:evaluado, :'sin evaluar'], type: :select, url: mentor_student_path(@user)
              /  %a{href: '#', title: 'Haz clic para editar la información'}
              /    %i.fa.fa-edit
              %tr.odd.gradeX
                %td Correo electrónico
                %td
                  = @user.email
              %tr.odd.gradeX
                %td Teléfono
                %td
                  = @user.phone_number
              %tr.odd.gradeX
                %td Industria
                %td
                  = unless @user.industry.nil? then @user.industry.name else 'N/A' end
              %tr.odd.gradeX
                %td Ubicación
                %td #{@user.state}, #{@user.city}
              %tr.odd.gradeX
                %td Grupo
                %td
                  = @user.group.name unless @user.group.nil?
              %tr.odd.gradeX
                %td Fecha de creación de cuenta
                %td #{l @user.created_at, format: :special}
              %tr.odd.gradeX
                %td Fecha de activación de cuenta
                %td #{l @user.invitation_accepted_at, format: :special unless @user.invitation_accepted_at.nil?}
              %tr.odd.gradeX
                %td Cursos inscritos
                %td
                  - @user.group.programs.each do |program|
                    \-
                    = link_to program.name, mentor_evaluations_path(user_id: @user, program_id: program)
                    %br
  .row
    .col-sm-9
      %h3
        Estadísticas generales de programas inscritos
    .col-sm-3
      = link_to mentor_group_path(@user.group.id), class: "pull-right" do
        %button.btn.btn-info.btn-sm.m-t-10.m-b-10
          %i.fa.fa-reply
          Regresar a grupo

  .panel.panel-default
    .panel-body.table-responsive
      %table.table.table-hover
        %thead
          %tr
            %th{:width => '50%'}
              Curso inscrito
            %th{:width => '25%'}
              Avances del alumno
            %th
              Acciones
        %tbody
          - if !@user.group.nil?
            - @user.group.programs.each do |program|
              /- if @user.group.programs.exists?(program) #hace lo de abajo solo si el programa está DISPONIBLE
              %tr
                %td.p-b-35
                  %div
                    = link_to program.name, mentor_evaluations_path(user_id: @user, program_id: program), :style => "font-size: 17px;"
                  - with_questions, without_questions = chapter_have_questions?(program)[0], chapter_have_questions?(program)[1]
                  - if with_questions.count > 0
                    %p.hint-text.m-t-5.m-b-5 Módulos con preguntas:
                    %ul.list-inline.no-style.unstyled
                      - with_questions.each_with_index do |chapter, index|
                        %li.squized-li
                          = link_to mentor_evaluation_path(chapter, user_id: @user, program_id: program) do
                            - answered_percentage = answered_questions(chapter, @user) * (100 / chapter.questions.count.to_f).ceil
                            - checked = chapter.chapter_checked?(chapter.id, @user.id)
                            - if answered_percentage > 95
                              .label.label-success{:class => "#{checked ? '' : 'p-sides-14'}"}
                                M#{index+1}
                                %i.fa{:class => "#{checked ? 'fa-check' : ''}"}
                            - else
                              .label{:class => "#{(answered_percentage > 0) ? 'label-warning' : ''} #{checked ? '' : 'p-sides-14'}"}
                                M#{index+1}
                                %i.fa{:class => "#{checked ? 'fa-check' : ''}"}
                  - if without_questions.count > 0
                    %p.hint-text.m-t-5.m-b-5 Módulos sin preguntas:
                    %ul.list-inline.no-style.unstyled
                      - without_questions.each_with_index do |chapter, index|
                        %li.squized-li
                          - seen_percentage = seen_percentage_chapter(chapter, @user)
                          - if seen_percentage > 95
                            .label.label-success
                              M#{index+1}
                              %i.fa.fa-check
                          - else
                            .label.p-sides-14{:class => "#{ (seen_percentage > 0) ? 'label-warning' : '' }"}
                              M#{index+1}
                %td.p-t-25
                  .m-b-10
                    %i.fa.fa-edit
                    #{@user.questions_answered_for(program)}
                    %span preguntas contestadas
                    %strong (#{@user.percentage_questions_answered_for(program)}%)
                  .m-b-10
                    %i.fa.fa-eye
                    #{@user.content_visted_for(program)}
                    %span contenidos vistos
                    %strong (#{@user.percentage_content_visited_for(program)}%)
                %td.p-r-0
                  %ul.unstyled.no-style.p-l-0
                    %li.p-l-0
                      = link_to mentor_evaluations_path(user_id: @user, program_id: program) do
                        %i.fa.fa-eye
                        Ir a evaluación de programa
                    %li.p-l-0.m-t-10
                      = link_to mentor_evaluations_path(user_id: @user, program_id: program, format: :xlsx) do
                        %i.fa.fa-file-excel-o
                        Descargar Excel
                    %li.p-l-0.m-t-10
                      %input{type: "hidden", id: "user_key_#{@user.id}", value: @user.id}
                      %input{type: "hidden", id: "program_key_#{program.id}", value: program.id}
                      .btn-like-switch.btn-like-switch-small
                        %label.switch.switch-small
                          %form{:action => program_stats_path, 'data-remote': "true", method: :post, id: "edit_program_stat_#{program.id}"}
                            - if get_program_stat(@user, program).nil?
                              %input{type: "checkbox", id: "checking_program_#{program.id}", name: "program_stat[checked]"}
                            - else
                              - program_stats = get_program_stat(@user, program)
                              - if program_stats.checked == 1
                                %input{type: "checkbox", id: "checking_program_#{program.id}", value: program_stats.checked, name: "program_stat[checked]", checked: :true}
                              - else
                                %input{type: "checkbox", id: "checking_program_#{program.id}", value: program_stats.checked, name: "program_stat[checked]"}
                            .slider.slider-small.round
                        .label-for-switch.label-for-switch-small.p-l-5
                          Estado de evaluación
                      %script{ :type => 'text/javascript' }
                        $(document).ready(function(){
                        $("#checking_program_" + #{program.id}).change(function(){
                        var src = $(this).val();
                        var src2 = $("#user_key_" + #{@user.id}).val();
                        var src3 = $("#program_key_" + #{program.id}).val();
                        $.ajax({
                        type: "post",
                        url: "/save_program_stats",
                        data: {src, src2, src3},
                        success: function(data){
                        data.parents('form:first').submit();
                        }});
                        $("#alert-ra").css('display','block');setTimeout(function(){$("#alert-ra").css('display','none');},3000);
                        });
                        });

  %h3
    Estadísticas generales de exámenes
  .panel.panel-default
    .panel-body
      .table-responsive
        %table.table.table-hover
          %thead
            %tr
              %th
                Examen
              %th
                Preguntas disponibles
              %th
                Preguntas contestadas
              %th
                Calificación
              %th
          %tbody
            - @user.group.quizzes.each do |quiz|
              %tr
                %td= quiz.name
                %td= quiz.quiz_questions.count
                %td= quiz.answered(@user)
                %td= quiz.average(@user)
                %td= link_to "Ver detalle", analytics_quiz_mentor_student_path(@user, quiz_id: quiz)
  %h3
    Archivos del usuario
  .panel.panel-default
    .panel-body.table-responsive
      %table.table.table-hover
        %thead
          %tr
            %th
              Nombre de archivo
            %th
              Tipo de archivo
            %th
              Comentarios
            %th
              Subido en
            %th
              Fecha de modificación
        %tbody
          - @user.attachments.each do |attachment|
            %tr
              %th
                = link_to attachment.display_name, attachment.file.url, target: :_blank
              %th
                = attachment.humanize_document_type
              %th
                = attachment.label
              %th
                = l attachment.created_at, format: :special
              %th
                = l attachment.updated_at, format: :special

  %h3
    Entregables
  .panel.panel-default
    .panel-body.table-responsive
      %table.table.table-hover
        %thead
          %tr
            %th
              Nombre
            %th
              Archivo de ejemplo
            %th
              Tu entregable
            %th
              Estatus
            %th
              Comentarios
            %th
              Acciones
        %tbody
          - @delireverables.each do |delireverable|
            - user_delireverable = delireverable.delireverable_users.find_by(user: @user)
            %tr
              %td
                = delireverable.name
              %td
                = link_to 'Descargar', delireverable.file.url, target: '_blank'
              %td
                - if user_delireverable
                  = link_to 'Descargar', user_delireverable.file.url, target: '_blank'
                - else
                  N/A
              %td
                - if user_delireverable
                  = user_delireverable.huminize_status
                - else
                  Sin entregar
              %td
                - if user_delireverable
                  = user_delireverable.comments ? user_delireverable.comments : "N/A"
                - else
                  N/A
              %td
                - if user_delireverable
                  %p
                    = link_to 'Editar', edit_mentor_student_delireverable_user_path(@user, user_delireverable)

  %h3
    Entregables
  .panel.panel-default
    .panel-body.table-responsive
      %table.table.table-hover
        %thead
          %tr
            %th Nombre
            %th Descripción
            %th Estatus
            %th Comentarios
            %th Acciones
        %tbody
          - @refilables.each do |refilable|
            - user_refilable = refilable.refilables.find_by(user: @user)
            %tr
              %td
                = refilable.name
              %td
                = refilable.description
              %td
                - if user_refilable
                  = user_refilable.status
                - else
                  No contestado
              %td
                - if user_refilable
                  = user_refilable.comments ? user_refilable.comments : "N/A"
                - else
                  N/A
              %td
                - if user_refilable
                  %p
                  = link_to 'Ver', mentor_student_refilable_path(@user, user_refilable)
                  %p
                    = link_to 'Comentar', edit_mentor_student_refilable_path(@user, user_refilable)

  %h3
    Archivos compartidos con el usuario
  .panel.panel-default
    .panel-body.table-responsive
      %table.table.table-hover
        %thead
          %tr
            %th
              Nombre de archivo
            %th
              Tipo de archivo
            %th
              Comentarios
            %th
              Subido en
            %th
              Fecha de modificación
            %th
        %tbody
          - @user.shared_attachments.each do |attachment|
            %tr
              %th
                = link_to attachment.display_name, attachment.file.url, target: :_blank
              %th
                = attachment.humanize_document_type
              %th
                = attachment.label
              %th
                = l attachment.created_at, format: :special
              %th
                = l attachment.updated_at, format: :special
              %th
                = link_to 'Editar', edit_mentor_student_shared_attachment_path(@user, attachment), class: 'btn btn-default'
                = link_to 'Eliminar', mentor_student_shared_attachment_path(@user, attachment), method: :delete, data: { confirm: '¿Estás seguro?' }, class: 'btn btn-default'

  .pull-right
    = link_to new_mentor_student_shared_attachment_path(@user), class: 'btn btn-primary btn-lg m-b-50 m-r-30' do
      %i.fa.fa-upload
      Agregar archivo

#alert-ra.pgn-wrapper{"data-position" => "top-right", "style"=>"display:none;"}
  .pgn.push-on-sidebar-open.pgn-simple
    #al.alert.alert-info
      %button.close{"data-dismiss" => "alert", :type => "button"}>
        %span{"aria-hidden" => "true"} ×
        %span.sr-only Close
      #program_evaluation_text
        Estado de evaluación modificado
      #alert_text
#alert-ra-error.pgn-wrapper{"data-position" => "top-right", "style"=>"display:none;"}
  .pgn.push-on-sidebar-open.pgn-simple
    #al.alert.alert-error
      %button.close{"data-dismiss" => "alert", :type => "button"}>
        %span{"aria-hidden" => "true"} ×
        %span.sr-only Close
      #alert_text_error
/$(document).on('turbolinks:load', function(){
:javascript
  $(document).ready(function(){

    if ($("#student_ready").val() == "false") {
      $("#student_evaluation_mentor").each(function() {
        $('.switch').append('<div id="disabledClick" style="position:absolute;top:0px;left:0px;width:62px;height:36px;background:transparent;cursor:pointer;"></div>');
      });
      $("#disabledClick").click(function() {
        $("#alert_text_error").text("El alumno debe tener todos los programas evaluados (refresca la página si ya lo hiciste)");
        $("#alert-ra-error").css('display','block');
        setTimeout(function(){$("#alert-ra-error").css('display','none');},5000);
      });

    } else {
      $("#student_evaluation_mentor").click(function() {
        var this_user = $("#user_id").val();
        $.ajax({
          type: "post", url: "/change_evaluation",
          data: {
            'user_id': this_user
          },
          success: function (data, text) {
            if (data.eval){
              $("#program_evaluation_text").addClass('hidden');
              $("#alert_text").text("El alumno ha sido marcado como evaluado");
            }else{
              $("#program_evaluation_text").addClass('hidden');
              $("#alert_text").text("El alumno dejó de estar marcado como evaluado");
            }
            $("#alert-ra").css('display','block');
            setTimeout(function(){$("#alert-ra").css('display','none');},4000);
          },
          error: function (data) {
            console.log(data);
          }
        });
      });
    }
  });
