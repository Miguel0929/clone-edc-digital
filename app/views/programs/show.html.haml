- content_for :title  do
  = title_text_helper("Programa")

.container-fluid.container-fixed-lg
  .row
    .col-md-12
      .panel.panel-default
        .panel-heading
          %h3.panel-title
            Contenido del programa 
          -#.pull-right
          -#  Rating: 
          -#  = @program.rating.round(2)
          .pull-right
            = link_to program_program_attachments_path(@program), class: "btn btn-link", style: "color: #3a8fc8" do
              %i.fa.fa-file-archive-o
              Archivos adjuntos  
        .panel-body
          .row
            .col-sm-8
              %h3
                = @program.name
          .p-t-20.p-b-20
            .sortable{'data-update-url'=> url_prod_helper(sort_program_chapters_url(@program))}
              - @program.chapters.each do |chapter|
                #accordion.card.card-default{"aria-multiselectable" => "true", :role => "tablist", id: "chapter_#{chapter.id}"}
                  .modules-heading-card
                    .pull-left.cell-down-unfloat
                      %span.handle-sort
                        [mover]
                    .pull-right.cell-down-unfloat
                      %ul.no-style.unstyled.m-b-0.p-l-40.modules-menu-list.cell-down-pl0.cell-down
                        %li
                          = link_to content_chapter_path(chapter) do
                            %i.fa.fa-briefcase
                            Contenido
                        %li
                          = link_to rubrics_chapter_path(chapter) do
                            %i.fa.fa-tasks
                            Rúbricas
                        %li
                          = link_to edit_program_chapter_path(@program, chapter) do
                            %i.fa.fa-edit
                            Editar
                        %li
                          = link_to clone_program_chapter_path(@program, chapter), method: :post, data: {confirm: '¿Estás seguro?'} do
                            %i.fa.fa-copy
                            Clonar 
                        %li
                          = link_to program_chapter_path(@program, chapter), method: :delete, data: {confirm: '¿Estás seguro?'} do
                            %i.fa.fa-times
                            Eliminar 
                    .clearfix 
                  .modules-heading-body
                    %h4.m-b-0.m-t-0
                      = chapter.name
                    .hint-text.small-text
                      Lecciones:
                      %span.bold.text-primary #{chapter.lessons_count}
                      %span.p-l-10.p-r-10 
                      Preguntas:
                      %span.bold.text-primary #{chapter.questions_count}
                      %span.p-l-10.p-r-10  
                      Rúbricas de evaluación:
                      %span.bold.text-primary #{chapter.evaluations.count}

                    .panel-collapse.collapse{:id=>"collapse_#{chapter.id}", "aria-labelledby" => "heading_#{chapter.id}", :role => "tabpanel"}
                      .panel-body
                        .panel-body
                          .sortable{'data-update-url'=> url_prod_helper(sort_chapter_contents_url) }
                            - chapter.chapter_contents.each do |content|
                              - if content.coursable_type == 'Lesson'
                                .well{id: "chapter_content_#{content.id}"}
                                  %span.handle-sort
                                    [mover]
                                  = link_to clone_chapter_lesson_path(chapter, content.model), method: :post, data: {confirm: '¿Estás seguro?'}, 'data-toggle'=>'tooltip', 'data-placement'=>'top', title: 'Clonar lección' do
                                    %span.glyphicon.glyphicon-list
                                  %br
                                  %a{href: chapter_lesson_path(chapter, content.model)}
                                    = content.model.identifier
                                  %span.pull-right
                                    Rating:
                                    = content.rating.round(2)

                              - elsif content.coursable_type == 'Question'
                                .well{id: "chapter_content_#{content.id}"}
                                  = render partial: 'questions/question', locals: { question: content.model, chapter: chapter}
                              - elsif content.coursable_type == 'Quiz'
                                .well{id: "chapter_content_#{content.id}"}
                                  = render partial: 'quiz_programs/quiz', locals: { quiz: content, chapter: chapter}
                              - elsif content.coursable_type == 'TemplateRefilable'
                                .well{id: "chapter_content_#{content.id}"}
                                  = render partial: 'refillable_programs/refillable', locals: { refillable: content, chapter: chapter}
                              - elsif content.coursable_type == 'DelireverablePackage'
                                .well{id: "chapter_content_#{content.id}"}
                                  = render partial: 'delireverable_programs/delireverable', locals: { delireverable: content, chapter: chapter}         
                        .text-center
                          = link_to 'Agregar contenido', new_chapter_lesson_path(chapter), class: 'btn btn-success'
                          = link_to 'Agregar pregunta', new_chapter_question_path(chapter), class: 'btn btn-primary'
                          =# link_to 'Agregar evaluación', new_chapter_quiz_program_path(chapter), class: 'btn btn-success'
                          =# link_to 'Agregar plantilla', new_chapter_refillable_program_path(chapter), class: 'btn btn-primary'
                          =# link_to 'Agregar entregable', new_chapter_delireverable_program_path(chapter), class: 'btn btn-success'
          .row.p-r-20.p-l-20
            - if @pending_content_notifications.count > 0
              = link_to  notify_changes_program_path, :method => 'post', class: 'btn btn-success pull-right m-l-10 m-t-5 m-b-5', style: "white-space: normal !important; word-wrap: break-word;" do
                %i.fa.fa-send
                Enviar notificación de cambios ( #{@pending_content_notifications.count} )
            = link_to new_program_chapter_path(@program), class: 'btn btn-primary pull-right m-t-5 m-b-5' do
              %i.fa.fa-plus
              Agregar módulo
          .row.p-r-20.p-l-20
            - if @pending_content_notifications.count > 0
              .small-text.text-primary.pull-right.p-t-10
                *Recuerda usar el botón de arriba para notificar que hubo cambios cuando termines de editar este programa (también puedes 
                = link_to notify_null_program_path, method: :post, data: {confirm: '¿Estás seguro?'} do
                  %u Eliminar notificaciones pendientes
                )
                             
